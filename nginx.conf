user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024; # Per work process; number of simultaneous conns.
}

http {
    # Don't share version in Server response header.
    server_tokens off;
    charset       utf-8;

    #default_type text/plain; # Not application/octet-stream!!
    gzip on;
    gzip_types      text/plain application/xml; # text/html always compressed.

    log_format structured escape=json '{'
      '"time_iso8601": "$time_iso8601", '
      '"status": $status, '
      '"request_method": "$request_method", '
      '"request_time": "$request_time", '
      '"remote_addr": "$remote_addr", '
      '"host": "$host", '
      '"scheme": "$scheme", '
      '"request_uri": "$request_uri", ' # What is requested...
      '"uri": "$uri", '                 # ...versus normalized.
      '"query_string": "$query_string", '
      '"bytes_sent": $bytes_sent, '
      '"body_bytes_sent": $body_bytes_sent, '
      '"content_length": "$content_length", ' # May be empty; force a string.
      '"request_length": $request_length, '
      '"content_type": "$content_type", '
      '"http_referer": "$http_referer", '
      '"http_user_agent": "$http_user_agent", '
      '"http_x_forwarded_for": "$http_x_forwarded_for" '
    '}';

    access_log    /var/log/nginx/access.log  structured;

    sendfile            on;    # Less buffering, more fh-to-fh copying.
    tcp_nopush          on;    # sendfile-adjacent; sends resp hdrs in 1 packet.
    tcp_nodelay         on;    # Default; good for static sites.
    keepalive_timeout   5;     # Set low; prob don't need keepalive support.
    types_hash_max_size 4096;  # Out-of-the-box; leave for now.

    include             /etc/nginx/mime.types;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    include /etc/nginx/conf.d/*.conf;

    # Requests without a Host header go nowhere.
    server {
        listen      80 default_server;
        server_name "";
        return      418;
    }

    server {
        # Always redirect to HTTPS.
        listen 80;
        server_name   assets.ryanfrantz.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name   assets.ryanfrantz.com;
        ssl_certificate /etc/letsencrypt/live/assets.ryanfrantz.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/assets.ryanfrantz.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Exact match of root resource.
        location = / {
            return 200 "assets";
        }

        location /hit {
          return 200 "Thank you";
        }

        location / {
            return 404;
        }
    }
}
